extends ../layout-with-sidebar
include ../mixins/common

append script
  //- This goes at the end (of rendering), even if it is at the top of this file
  //-script(src='http://cdn.dev.skype.com/uri/skype-uri.js')

  //- Configure the sidebar
  script(src="javascripts/Home.js")
  //script(src="javascripts/boot.js")
  script.
    $(document).ready(Home.boot);   

append content2
  title Daniel Olivier - Curriculum Vitae

  h1 Curriculum Vitae
  //+timestamp

  .row
    .col-md-6
      //- File offset if from the root, not the current file
      - var ci = JSON.parse(fs.readFileSync('./data/contactInfo.json', 'utf8'));
      +contactInfo(ci)

  .row
    .col-md-9
      section.panel.panel-primary#skills
        .panel-heading
          h2.panel-title Primary activities
        .panel-body
          table.table
            tbody
              tr
                td Analysis, design and development (C++, OOP)
              tr
                td Developer support and technical advisory roles
              tr
                td Grid computing, interoperability, optimisation

  .row
    .col-md-12
      - var ts = require1('./data/technicalSkills.js')
      +technicalSkills(ts.technicalSkills)

  .row
    .col-md-9
      section.panel.panel-primary#education
        .panel-heading
          h2.panel-title= i18n.t('app.education')
        .panel-body
          table.table.align-right
            tbody
              tr
                td: span.time-duration= dateHelpers.formatDate([1989, 9]) + ' - ' + dateHelpers.formatDate([1993, 5])
                td
                  p: span.company-name: a(href="http://www.polymtl.ca") École Polytechnique de Montréal
                  p= i18n.t('app.diploma')

  .row
    .col-md-12
      section.panel.panel-primary#work-history
        .panel-heading
          h2.panel-title= i18n.t('app.workhistory')
        .panel-body
          table.table.align-right
            thead
              tr
                th.col-md-2= i18n.t('app.workcolumn1')
                th.col-md-8= i18n.t('app.workcolumn2')
            tbody
              - var works = require1('./data/workExperiences.js').workExperiences
              +workExperience(works.sgcib)
                p Development, maintenance, optimization and support of the primary risk analysis application covering derivative financial products
                ul
                  li Maintenance and development of the (Gigaspace) cache support system (market data + static data) :
                  ul
                    li Incorporation of new fields and structures into cache schema, and supporting changes in the code (C++, Java, C#), ensuring backwards and forward compatibility
                    li Maintenance and evolution of the changes to configuration management.
                    |  i.e. compile Gigaspace in debug mode, allowing for the deployment into the developer environment (and ensuring symmetry between developer, testing and production environments)
                    li Deployment of cache proxy onto testing and development compute grids
                    li Production debugging (remote desktop, remote debug, WMI, Powershell) + crash dump capture and analysis
                    li Study and use of surveillance applications, grid management, and distributed computation frameworks (internal and OTS)
                    li Assessment of feasibility of cache invalidation notifications (emanating from a DB service)
                    li Developer support

                  li Development of a C++ LoadService (specialized DB front-end service) :
                  ul
                    li Development of a generic “access module” (to hide the details of our use of Google protobuf packets and library)
                    li Census of all target database (common market and static data) entry points and conversion to new LoadService interface
                    li Connection management and optimization (socket lifecycle)
                    li Adaptation of LoadService to a second target DB, and extending the flexibility of the protocol and the supported types (i.e. input vectors)
                    li Migration of hardcoded SQL queries to stored procedures
                    li Massive legacy code refactoring. Suppression of 150 KLOC (over 1.5 MLOC initial)
                    li Support, diagnoses, bug management
                    li Validation of results (DB queries) through instrumentation of access functions (and use of Boost serialization to produce reports)
                    li Reconciliation of divergent reports
                    li Unit and performance tests
                    li Developer support
                    li Results : impact on database divided by 5

              +workExperience(works.ifcs)
                h4
                  span.company-name
                    a(href="http://www.tech-advantage.com/") Tech'Advantage
                    |, subsidiary of the 
                    a(href="http://www.ifp-school.com/") IFP (Institut Français du Pétrole)
                  |  project:
                p Maintenance and development (internal structure and GUI) of a legacy lithospheric modeling framework and application suite (sub-surface 3D cartography for petroleum and mining applications)
                p
                  em Technical environment:
                  |  Linux (RH9, EL5), C++ (Eclipse + CDT), Ilog Views + internal libraries
                hr
                h4
                  span.company-name: a(href="http://www.carestreamdental.com/") Trophy
                  |  project:
                p Development and optimization of a dental imagery visualization application
                p
                  em Technical environment:
                  |  Visual C++, wxWidgets, VTK (graphics engine)

              +workExperience(works.cmlabs)
                p The Vortex C++ SDK is a software library intended for mechanical simulation and is subdivided into the following categories or problems domains:
                ul
                  li physics: collision detection (volumes, contacts), dynamics (friction, constraints, control, motors),
                  li graphics and visualization, animation, special effects,
                  li vehicles (wheeled, tracked), including the complete modeling of suspension, transmission, differentials, wheel traction, etc.
                  li articulated robots (undersea, de-mining),
                  li particle systems, fluids, cables,
                  li simulated sensors (i.e. depth camera, sonar), ray-casting, graphical display
                  li 3rd party integrations:
                  ul
                    li Vortex for VegaPrime (Multigen/Presagis), LynxPrime integration module (vpVx, vpVxVehicle)
                    li OpenSceneGraph, OpenGL
                    li Virtools, etc.
                  li Support modules: i.e. persistence, data-flow programming, encryption/decryption of resources

                p Developed and maintained the Vortex library and supporting framework:
                ul
                  li entire development life-cycle : analysis, architecture, development, re-factoring, debugging, and support (internal or external/client)
                  li bug tracking and resolution, performance,
                  li developed and enhanced SDK samples/tutorials (all categories), user documentation
                  li persistence + physics file format (using Boost)

                p Crane simulator prototypes (mobile, tower), software development, initial productization and support:
                ul
                  li graphics (tuning, debugging, frame rate, shadows),
                  li networking (DTK, Ace/TAO), GUI (wxWidgets, Qt), sound (OpenAL)
                  li physics parameterization and scripting (core),
                  li head-tracker (Ascension),
                  li devices and controls (National Instruments, NI-DAQmx C APIs),
                  li scripting (Lua + tolua++),
                  li simulator configuration, scenario development,
                  li integration issues
                  li build system/process, construction, scripts, installation/deployment,
                  li hardware inventory, assembly, machine installation/management,
                  li on-site field support

                p Maintain and extend the build system, which includes:
                ul
                  li configuration management, source control
                  li makefiles, scripting, native projects, build matrix, packaging, deployment
                  li multi-platform (Linux, Windows)
                  li QA, runtime issues, licensing (FlexLM), developer support (internal, external), deployment and installation
                  li testing and support of 3rd party integration modules
                  li planning and evolution

                p Special tasks:
                ul
                  li DRDC project (Gaming Tools and Serious Games survey)

              +workExperience(works.timespring)
                p Development of an incremental and continuous backup application.
                ul
                  li Deployment maintenance (InstallShield, MSI)
                  li Build script maintenance (make, bash, perl, VBScript, C#, NAnt)
                  li Reporting (C#, DotNet, XML, XSLT, HTML, CVS)
                  li Incorporation of new tools to build process (ex. Purify, Quantify)
                  li Installation/deployment module (SCM, C++)

              +workExperience(works.visualmed)
                ul
                  li Development, developer support, configuration management
                  li Analysis and debugging, developer support (30+ developers), software build procedure (including deployment), integration and regression testing
                  li Special projects:
                  ul
                    li Translation management infrastructure (studio and runtime)
                    li Citrix compatibility with fingerprint scanning peripheral device (virtual channel driver)

              +workExperience(works.rational)
                ul
                  li Build script and integration test maintenance
                  li Integration testing, oversight, reporting
                  li Version control, bug and feature management, distribution, user support
                  li Technical documentation (internal APIs)
                  li Performance analysis

              +workExperience(works.microsoft)
                ul
                  li Developer support (bug-tracking)
                  li Identify and correct applications with compatibility issues
                  li Analysis, diagnosis, triage and dispatch of compatibility bugs
                  li Performance analysis and documentation of API interception strategies in Win2K
                  li Exploratory testing of selected target applications
                  li Kernel/Base (Win32 API category) developer support

              +workExperience(works.srtelecom)
                ul
                  li Design and implementation of a network management system
                  li PC Workstation environment (Visual C++, Win32, MFC, STL, Corba, ACE,OOP, patterns)
                  li Design, development and unit testing of client (marshaling, distributed networking)
                  li Maintenance of communication server (bridge)
                  li Evaluation of development tools and operating environments
                  li Research into ITU network management standards and distributed systems (TMN, CORBA, JIDM)
                  li Maintenance/development of the communication sub-system of the SR-500 system (custom embedded OS) : Borland C++ tools, Checkmate ICE, UART
                  li Technical lead for control panel (Compact Central Station) : Microchip PIC processor supported by simple C++/MFC application

              +workExperience(works.lansertech)
                p Narrowband wireless local loop bypass network (POS transactions, automated meter reading, alarm systems, etc.)
                p Software maintenance and testing of network management protocol conversion application (proxy agent)

              +workExperience(works.nbstech)
                p Develop, support and maintain embedded software for POS Terminals
                ul
                  li Port the proprietary OS and (client) applications from an 80x86 platform to a 68000 platform (C, 68K asm, MC68302, 80x86 asm, Microtec tools, XRAY debugger)
                  li Design and implementation of master-slave network (BASE-32 financial protocol)
                  li Design and implementation of a network management system (Windows NT, VC++ v2.0, MFC, IPX/SPX)
                  li Maintenance of a 1st generation management system
                  li Evaluation of multi-platform GUI development tools (zApp, XVT, MFC, OWL, …)
                  li Design and implementation of a class library (OOP) for client/server communications

              +workExperience(works.stejustine)
                  p Design, implementation and optimization of a program to visualize the 3-D rendering of the human spine in motion

  .row
    .col-md-6
      .panel.panel-primary#references
        .panel-heading
          h2.panel-title References
        .panel-body
          p Available upon request
